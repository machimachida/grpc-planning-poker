syntax = "proto3";

package proto.v1;

option go_package = "github.com/machimachida/grpc-planning-poker/gen/proto/v1;pokerv1";

service PlanningPokerService {
  rpc CreateRoom(CreateRoomRequest) returns (stream ConnectResponse);
  rpc Connect(ConnectRequest) returns (stream ConnectResponse);
  rpc Vote(VoteRequest) returns (VoteResponse);
  rpc ShowVotes(ShowVotesRequest) returns (ShowVotesResponse);
  rpc NewGame(NewGameRequest) returns (NewGameResponse);
}

enum MessageType {
  MESSAGE_TYPE_UNSPECIFIED = 0;
  MESSAGE_TYPE_JOIN = 1;
  MESSAGE_TYPE_VOTE = 2;
  MESSAGE_TYPE_SHOW_VOTES = 3;
  MESSAGE_TYPE_LEAVE = 4;
  MESSAGE_TYPE_NEW_GAME = 5;
  MESSAGE_TYPE_CREATE_ROOM = 6;
  MESSAGE_TYPE_STATUS = 7;
  MESSAGE_TYPE_RESET_VOTE = 8;
}

message CreateRoomRequest {
  string id = 1;
  string room_id = 2;
}

message ConnectRequest {
  string id = 1;
  string room_id = 2;
}

message ConnectResponse {
  string id = 1;
  MessageType type = 2;
  string message = 3;
}

message VoteRequest {
  string id = 1;
  int32 vote = 2;
  string room_id = 3;
}
message VoteResponse {
  string message = 1;
}

message ShowVotesRequest {
  string id = 1;
  string room_id = 2;
}
message ShowVotesResponse {
  string message = 1;
}

message NewGameRequest {
  string id = 1;
  string room_id = 2;
}
message NewGameResponse {
  string message = 1;
}
